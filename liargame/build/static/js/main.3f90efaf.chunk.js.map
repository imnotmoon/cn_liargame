{"version":3,"sources":["components/ChatMessage.js","components/ChatInGame.js","components/Vote.js","components/FinishModal.js","views/InGame.js","components/ChatWaiting.js","components/WaitingRoom.js","components/StartGameModal.js","views/Waiting.js","components/Header.js","components/NicknameModal.js","App.js","index.js"],"names":["ChatMessage","chat","content","from","className","style","marginRight","msg","Chat","title","useState","inputMessage","setInputMessage","messages","setMessages","useContext","NicknameContext","nickname","chatLogs","useRef","onInputChange","e","currentTarget","value","onSubmitClick","preventDefault","socket","emit","state","player","text","inputEnterEvent","key","useEffect","document","getElementById","addEventListener","removeEventListener","console","log","on","push","offAny","Consumer","ref","map","index","type","onChange","id","onClick","Vote","liar","players","voteCnt","setVoteCnt","onCheck","forEach","vote","getAttribute","alert","data","React","memo","FinishModal","win","picked","liarName","InGame","finishModal","setFinishModal","modalObj","setModalObj","length","p","sendVoteResult","pickToLiar","liarCnt","reduce","prev","cur","includes","off","whoami","axios","post","then","WaitingRoom","StartGameModal","word","Waiting","NowPlayingContext","setNowPlaying","setGamePlayers","setPlayers","activeModal","setActiveModal","setLiar","setWord","setTimeout","Header","window","open","close","NicknameModal","setNickname","currentNickname","setCurrentNickname","inputRef","current","focus","onButtonClick","placeholder","io","connect","App","nowPlaying","Provider","createContext","ReactDOM","render"],"mappings":"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","file":"static/js/main.3f90efaf.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nChatMessage.propTypes = {\n\t// chat : { content(채팅내용), from(누가 보낸 채팅인지) }\n\tchat: PropTypes.object.isRequired,\n};\n\nfunction ChatMessage({ chat }) {\n\tconst { content, from } = chat;\n\n\treturn (\n\t\t<span\n\t\t\tclassName={\n\t\t\t\tfrom === \"self\" ? \"chatMessage my_message\" : \"chatMessage\"\n\t\t\t}\n\t\t>\n\t\t\t<span className=\"chat__profile\" style={{ marginRight: \"5px\" }}>\n\t\t\t\t{from === \"self\" ? \"\" : from}\n\t\t\t</span>\n\t\t\t<span className=\"chat__text\">{content}</span>\n\t\t</span>\n\t);\n}\n\nexport default ChatMessage;\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ChatMessage from \"./ChatMessage\";\nimport \"./Chat.css\";\nimport { socket, NicknameContext } from \"../App\";\n\nChat.propTypes = {\n\t// 채팅방의 제목\n\ttitle: PropTypes.string.isRequired,\n};\n\nlet msg = [];\n\nfunction Chat({ title }) {\n\tconst [inputMessage, setInputMessage] = useState(\"\"); // 지금 입력하고 있는 메시지 내용\n\tconst [messages, setMessages] = useState([]); // 대화내용\n\tconst [nickname, setNickname] = useContext(NicknameContext);\n\tconst chatLogs = useRef();\n\tconst onInputChange = (e) => {\n\t\tsetInputMessage(e.currentTarget.value);\n\t};\n\n\tconst onSubmitClick = (e) => {\n\t\te.preventDefault();\n\n\t\t// socekt : 소켓 통신을 통해 서버로 메시지 전송\n\t\tsocket.emit(\"chat\", {\n\t\t\tstate: \"chat\",\n\t\t\tplayer: nickname,\n\t\t\ttext: inputMessage,\n\t\t});\n\t\tsetInputMessage(\"\");\n\t};\n\n\tconst inputEnterEvent = (e) => {\n\t\tif (e.key === \"Enter\" || e.key === \"Return\") {\n\t\t\tonSubmitClick(e);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument\n\t\t\t.getElementById(\"input-text\")\n\t\t\t.addEventListener(\"keypress\", inputEnterEvent);\n\t\treturn () => {\n\t\t\ttry {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(\"input-text\")\n\t\t\t\t\t.removeEventListener(\"keypress\", inputEnterEvent);\n\t\t\t} catch {\n\t\t\t\tconsole.log(\"아직..\");\n\t\t\t}\n\t\t};\n\t});\n\n\t// socket : 채팅 메시지 수신\n\tuseEffect(() => {\n\t\tsocket.on(\"chat\", ({ state, player, text }) => {\n\t\t\tif (state === \"chat\" && nickname) {\n\t\t\t\t// 채팅 보낸사람이 나면 self로 바꾸고 아니면 그대로 냅둔다.\n\t\t\t\tplayer = player === nickname ? \"self\" : player;\n\n\t\t\t\t// pseudo code - 채팅내용을 받아와서 messages 배열에 추가\n\t\t\t\tmsg.push({ content: text, from: player });\n\t\t\t\tconsole.log(msg);\n\t\t\t\tsetMessages([...msg]);\n\t\t\t\t// chatLogs.current.scrollTop = chatLogs.current.scrollHeight;\n\t\t\t}\n\t\t});\n\t}, [nickname]);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tmsg = [];\n\t\t\tsocket.offAny(\"chat\");\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<NicknameContext.Consumer>\n\t\t\t{() => (\n\t\t\t\t<div className=\"chat frame\">\n\t\t\t\t\t<div className=\"chat__title\">\n\t\t\t\t\t\t<p>{title}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chat__content\" ref={chatLogs}>\n\t\t\t\t\t\t{messages.map((chat, index) => (\n\t\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tchat={chat}\n\t\t\t\t\t\t\t\tclassName=\"chat__messages\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chat__sender\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\t\t\tvalue={inputMessage}\n\t\t\t\t\t\t\tid=\"input-text\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button onClick={onSubmitClick}>전송</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</NicknameContext.Consumer>\n\t);\n}\n\nexport default Chat;\n","import React, { useState, useContext, memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NicknameContext } from \"../App\";\nimport { PlayerContext } from \"../views/InGame\";\nimport \"./Vote.css\";\n\nVote.propTypes = {\n\t// 라이어인지 아닌지\n\tliar: PropTypes.bool.isRequired,\n\n\t// 타이틀\n\ttitle: PropTypes.string.isRequired,\n};\n\nfunction Vote({ liar, title, players }) {\n\tconst [voteCnt, setVoteCnt] = useState(3);\n\tconst [nickname, setNickname] = useContext(NicknameContext);\n\n\tconst onCheck = (e) => {\n\t\tif (voteCnt > 0) {\n\t\t\t// 클릭된 플레이어의 인덱스 가져오기 + 클릭된 플레이어에게 체크 + 다른 플레이어에게 체크된거 제거\n\t\t\tplayers.forEach((player) => {\n\t\t\t\tplayer.vote =\n\t\t\t\t\tplayer.nickname === e.currentTarget.getAttribute(\"data\")\n\t\t\t\t\t\t? 1\n\t\t\t\t\t\t: 0;\n\t\t\t});\n\n\t\t\t// voteCnt 하나 내리기\n\t\t\tsetVoteCnt((voteCnt) => voteCnt - 1);\n\t\t} else {\n\t\t\talert(\"더 이상 투표할 수 없습니다\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"vote frame\">\n\t\t\t<div className=\"vote__title\">\n\t\t\t\t<p>{title}</p>\n\t\t\t</div>\n\t\t\t{!liar ? (\n\t\t\t\t<div className=\"vote__players\">\n\t\t\t\t\t{players.map(\n\t\t\t\t\t\t(player, index) =>\n\t\t\t\t\t\t\tplayer.nickname !== nickname && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tonClick={onCheck}\n\t\t\t\t\t\t\t\t\tdata={player.nickname}\n\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\"vote__cell\" +\n\t\t\t\t\t\t\t\t\t\t(player.vote === 1 ? \" check\" : \"\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>{player.nickname}</span>\n\t\t\t\t\t\t\t\t\t<div className=\"vote__check\">O</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>남은 투표 횟수 : {voteCnt}/3 회</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"vote__status\">\n\t\t\t\t\t{players.map(\n\t\t\t\t\t\t(player, index) =>\n\t\t\t\t\t\t\tplayer.nickname !== nickname && (\n\t\t\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t\t\t<span>{player.nickname}</span>\n\t\t\t\t\t\t\t\t\t<span>나를 지목</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default React.memo(Vote);\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NicknameContext from \"../App\";\nimport \"./FinishModal.css\";\nimport { socket } from \"../App\";\n\nFinishModal.propTypes = {\n\t// 1이면 정상인, 2면 라이어\n\tliar: PropTypes.number.isRequired,\n\n\t// 내 닉네임\n\tnickname: PropTypes.string.isRequired,\n};\n\nfunction FinishModal({ liar, win, picked, liarName }) {\n\treturn (\n\t\t<div className=\"finishModal frame modal\">\n\t\t\t<div className=\"title\">\n\t\t\t\t{win === true\n\t\t\t\t\t? \"게임에서 승리했습니다\"\n\t\t\t\t\t: \"게임에서 패배했습니다\"}\n\t\t\t</div>\n\t\t\t{win === true ? (\n\t\t\t\t\"\"\n\t\t\t) : liar === 1 ? (\n\t\t\t\t<div>\n\t\t\t\t\t<p>라이어는</p>\n\t\t\t\t\t<div>{liarName}</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<p>나를 라이어로 지목한 사람</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{picked.map((player, index) => (\n\t\t\t\t\t\t\t<div key={index}>{player}</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default FinishModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { socket } from \"../App\";\nimport Chat from \"../components/ChatInGame\";\nimport Vote from \"../components/Vote\";\nimport FinishModal from \"../components/FinishModal\";\nimport \"./InGame.css\";\nimport axios from \"axios\";\n\nInGame.propTypes = {\n\t// 정상인은 1, 라이어는 2\n\tliar: PropTypes.number,\n};\n\nexport default function InGame({ liar, players, nickname }) {\n\tconst [finishModal, setFinishModal] = useState(false);\n\tconst [modalObj, setModalObj] = useState({\n\t\twin: false,\n\t\tpicked: [],\n\t\tliar: \"\",\n\t});\n\n\tsocket.on(\"result\", ({ state, liar, picked }) => {\n\t\tconsole.log(\"result !!!! \", liar, picked);\n\t\tsetFinishModal(true);\n\t\tif (state === \"result\" && players.length === 4) {\n\t\t\tplayers.forEach((p) => {\n\t\t\t\tif (p.vote === 1) {\n\t\t\t\t\tsendVoteResult(nickname, p);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\tsocket.on(\"end\", (data) => {\n\t\tconsole.log(\"end : \", data);\n\t\tlet pickToLiar = [];\n\t\tlet liarCnt = data.picked.reduce((prev, cur) => {\n\t\t\tif (data.liar === cur.vote) {\n\t\t\t\tpickToLiar.push(cur.nickname);\n\t\t\t\treturn prev + 1;\n\t\t\t} else return prev;\n\t\t}, 0);\n\t\tlet win = false;\n\t\tif (liar === 2) {\n\t\t\tif (liarCnt >= 2) {\n\t\t\t\tconsole.log(\"패배 - 라이어\");\n\t\t\t\twin = false;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"승리 - 라이어\");\n\t\t\t\twin = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (pickToLiar.includes(nickname)) {\n\t\t\t\tconsole.log(nickname, \"승리\");\n\t\t\t\twin = true;\n\t\t\t} else {\n\t\t\t\tconsole.log(nickname, \"패배\");\n\t\t\t\twin = false;\n\t\t\t}\n\t\t}\n\t\tsetModalObj({\n\t\t\twin: win,\n\t\t\tpicked: pickToLiar,\n\t\t\tliar: data.liar,\n\t\t});\n\t});\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tsocket.off(\"result\");\n\t\t\tsocket.off(\"end\");\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{/* <div>{gameTime}</div> */}\n\t\t\t<div className=\"inGame\">\n\t\t\t\t{liar === 1 ? (\n\t\t\t\t\t<Vote\n\t\t\t\t\t\tliar={false}\n\t\t\t\t\t\ttitle=\"누가 라이어입니까?\"\n\t\t\t\t\t\tplayers={players}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t\t<Chat\n\t\t\t\t\ttitle={\n\t\t\t\t\t\tliar === 1\n\t\t\t\t\t\t\t? `단어를 설명해주세요`\n\t\t\t\t\t\t\t: \"단어에 대해 아는척 해주세요\"\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{finishModal && (\n\t\t\t\t<>\n\t\t\t\t\t<FinishModal\n\t\t\t\t\t\tliar={modalObj.liar === nickname ? 2 : 1}\n\t\t\t\t\t\twin={modalObj.win}\n\t\t\t\t\t\tpicked={modalObj.picked}\n\t\t\t\t\t\tliarName={modalObj.liar}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"modal-background\"></div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nconst sendVoteResult = (whoami, player) => {\n\tconsole.log(whoami, player);\n\taxios\n\t\t.post(\"http://13.125.236.234:3001/\", {\n\t\t\tnickname: whoami, // my nickname\n\t\t\tvote: player.nickname,\n\t\t})\n\t\t.then((data) => {\n\t\t\tconsole.log(data);\n\t\t});\n};\n\n// vote context\nexport const PlayerContext = React.createContext();\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ChatMessage from \"./ChatMessage\";\nimport \"./Chat.css\";\nimport { socket, NicknameContext } from \"../App\";\n\nChat.propTypes = {\n\t// 채팅방의 제목\n\ttitle: PropTypes.string.isRequired,\n};\n\nlet msg = [];\n\nfunction Chat({ title }) {\n\tconst [inputMessage, setInputMessage] = useState(\"\"); // 지금 입력하고 있는 메시지 내용\n\tconst [messages, setMessages] = useState([]); // 대화내용\n\tconst [nickname, setNickname] = useContext(NicknameContext);\n\tconst chatLogs = useRef();\n\tconst onInputChange = (e) => {\n\t\tsetInputMessage(e.currentTarget.value);\n\t};\n\n\tconst onSubmitClick = (e) => {\n\t\te.preventDefault();\n\n\t\t// socekt : 소켓 통신을 통해 서버로 메시지 전송\n\t\tsocket.emit(\"chat\", {\n\t\t\tstate: \"chat\",\n\t\t\tplayer: nickname,\n\t\t\ttext: inputMessage,\n\t\t});\n\t\tsetInputMessage(\"\");\n\t};\n\n\tconst inputEnterEvent = (e) => {\n\t\tif (e.key === \"Enter\" || e.key === \"Return\") {\n\t\t\tonSubmitClick(e);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tdocument\n\t\t\t.getElementById(\"input-text\")\n\t\t\t.addEventListener(\"keypress\", inputEnterEvent);\n\t\treturn () => {\n\t\t\ttry {\n\t\t\t\tdocument\n\t\t\t\t\t.getElementById(\"input-text\")\n\t\t\t\t\t.removeEventListener(\"keypress\", inputEnterEvent);\n\t\t\t} catch {\n\t\t\t\tconsole.log(\"아직..\");\n\t\t\t}\n\t\t};\n\t});\n\n\t// socket : 채팅 메시지 수신\n\tuseEffect(() => {\n\t\tsocket.on(\"chat\", ({ state, player, text }) => {\n\t\t\tif (state === \"chat\" && nickname) {\n\t\t\t\t// 채팅 보낸사람이 나면 self로 바꾸고 아니면 그대로 냅둔다.\n\t\t\t\tplayer = player === nickname ? \"self\" : player;\n\n\t\t\t\tmsg.push({ content: text, from: player });\n\t\t\t\tconsole.log(msg);\n\t\t\t\tsetMessages([...msg]);\n\t\t\t\t// chatLogs.current.scrollTop = chatLogs.current.scrollHeight;\n\t\t\t}\n\t\t});\n\t}, [nickname]);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tmsg = [];\n\t\t\tsocket.offAny(\"chat\");\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<NicknameContext.Consumer>\n\t\t\t{() => (\n\t\t\t\t<div className=\"chat frame\">\n\t\t\t\t\t<div className=\"chat__title\">\n\t\t\t\t\t\t<p>{title}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chat__content\" ref={chatLogs}>\n\t\t\t\t\t\t{messages.map((chat, index) => (\n\t\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tchat={chat}\n\t\t\t\t\t\t\t\tclassName=\"chat__messages\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"chat__sender\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\t\t\tvalue={inputMessage}\n\t\t\t\t\t\t\tid=\"input-text\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button onClick={onSubmitClick}>전송</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</NicknameContext.Consumer>\n\t);\n}\n\nexport default Chat;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './WaitingRoom.css'\n\nWaitingRoom.propTypes = {\n    // 각 플레이어의 이름이 담긴 배열\n    players: PropTypes.array.isRequired\n}\n\nfunction WaitingRoom({ players }) {\n    return (\n        <div className=\"waitingRoom frame\">\n            <div className=\"waitingRoom__title\">\n                <p>대기실</p>\n            </div>\n            <div>\n                <p>참여인원 : {players.length}/4명</p>\n                {players.map(((player, index) => (\n                    <div key={index} className=\"waitingRoom__player\">\n                        <p>{player}</p>\n                    </div>\n                )))}\n            </div>\n        </div>\n    )\n}\n\nexport default WaitingRoom\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './StartGameModal.css'\n\nStartGameModal.propTypes = {\n    // 라이어라면 true, 아니면 false\n    // liar 값에 따라 모달 내용이 달라짐\n    liar: PropTypes.bool.isRequired,\n\n    // 서버에서 보내준 word값.\n    // 라이어라면 빈칸이 올 것이고 라이어가 아니라면 단어가 올 것.\n    word: PropTypes.string\n}\n\nfunction StartGameModal({ liar, word }) {\n    return (\n        <div className=\"startGameModal frame modal\">\n            <div className=\"title\">\n                {liar\n                    ? <p>당신은 라이어입니다.</p>\n                    : <p>당신은 라이어가 아닙니다.</p>\n                }\n            </div>\n\n            {!liar &&\n                <div className=\"word\">\n                    <div>\n                        <p>{word}</p>\n                    </div>\n                </div>\n            }\n            <div className=\"startGameModal__timer\">\n                5초 뒤 게임이 시작됩니다\n            </div>\n        </div>\n    )\n}\n\nexport default StartGameModal\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Chat from \"../components/ChatWaiting\";\nimport { NicknameContext, NowPlayingContext, socket } from \"../App\";\nimport WaitingRoom from \"../components/WaitingRoom\";\nimport StartGameModal from \"../components/StartGameModal\";\nimport \"./Waiting.css\";\n\nexport default function Waiting({ nickname }) {\n\t// const [nickname, setNickname] = useContext(NicknameContext);\n\tconst { setNowPlaying, setGamePlayers } = useContext(NowPlayingContext);\n\tconst [players, setPlayers] = useState([]);\n\tconst [activeModal, setActiveModal] = useState(false);\n\tconst [currentNickname, setCurrentNickname] = useState(nickname);\n\n\tconst [liar, setLiar] = useState(false);\n\tconst [word, setWord] = useState(\"김치만두\");\n\n\tuseEffect(() => {\n\t\t// socket : 서버로부터 받은 입장 메시지 처리. players 배열에 추가\n\t\tsocket.on(\"enter\", ({ state, player }) => {\n\t\t\t// pseudo code\n\t\t\tstate === \"enter\" && setPlayers((players) => player);\n\t\t});\n\n\t\t// socket : 서버로부터 받은 게임시작 메시지 처리.\n\t\t// setLiar : 내가 라이어인지 아닌지\n\t\t// setword : 라이어가 아니라면 설명해야 할 단어\n\t\tsocket.on(\"gameset\", ({ state, player, liar, word }) => {\n\t\t\tif (state === \"gameset\") {\n\t\t\t\tconsole.log(liar, word);\n\t\t\t\tliar === nickname ? setLiar(true) : setLiar(false);\n\t\t\t\tliar && setWord(word);\n\t\t\t\tsetActiveModal(true);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetActiveModal(false);\n\t\t\t\t\tif (liar === nickname) {\n\t\t\t\t\t\tsetNowPlaying(2); // not liar\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetNowPlaying(1); // liar\n\t\t\t\t\t}\n\t\t\t\t\tsetGamePlayers(\n\t\t\t\t\t\tplayer.reduce((prev, cur) => {\n\t\t\t\t\t\t\treturn [...prev, { nickname: cur, vote: 0 }];\n\t\t\t\t\t\t}, [])\n\t\t\t\t\t);\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t\treturn socket.offAny();\n\t\t});\n\n\t\t// socket : 컴포넌트 죽을때 리스너 제거\n\t\treturn socket.offAny();\n\t}, [nickname]);\n\n\treturn (\n\t\t<>\n\t\t\t<NowPlayingContext.Consumer>\n\t\t\t\t{() => (\n\t\t\t\t\t<div className=\"waiting\">\n\t\t\t\t\t\t<WaitingRoom players={players} />\n\t\t\t\t\t\t<Chat title={\"채팅\"} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</NowPlayingContext.Consumer>\n\t\t\t{activeModal && (\n\t\t\t\t<>\n\t\t\t\t\t<StartGameModal liar={liar} word={word} />\n\t\t\t\t\t<div className=\"modal-background\"></div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import React from 'react'\nimport './Header.css'\n\nfunction Header() {\n\n    const onExitClick = () => {\n        // connection 제거\n\n        // 나가기\n        window.open(\"about:blank\", \"_self\");\n        window.close()\n    }\n\n    return (\n        <div className=\"header\">\n            <p>라이어게임</p>\n            <div className=\"header__exitBtn\" onClick={onExitClick}>\n                <p>나가기</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { NicknameContext, socket } from \"../App\";\nimport PropTypes from \"prop-types\";\nimport \"./NicknameModal.css\";\n\nNicknameModal.propTypes = {\n\t// nickname의 setter\n\tsetNickname: PropTypes.func.isRequired,\n};\n\nexport default function NicknameModal({ setNickname }) {\n\tconst [currentNickname, setCurrentNickname] = useState(\"\");\n\tconst inputRef = useRef();\n\n\tuseEffect(() => {\n\t\tinputRef.current.focus();\n\t});\n\n\tconst onInputChange = (e) => {\n\t\tsetCurrentNickname(e.currentTarget.value);\n\t};\n\n\tconst onButtonClick = (e) => {\n\t\tconsole.log(currentNickname);\n\t\tsetNickname(currentNickname);\n\n\t\t(() => {\n\t\t\tsocket.emit(\"enter\", {\n\t\t\t\tstate: \"enter\",\n\t\t\t\tplayer: currentNickname,\n\t\t\t});\n\t\t\tconsole.log(\"emit 'enter' message : \");\n\t\t})();\n\t};\n\n\treturn (\n\t\t<NicknameContext.Consumer>\n\t\t\t{() => (\n\t\t\t\t<div className=\"nicknameModal frame modal\">\n\t\t\t\t\t<div className=\"title\">안녕하세요!</div>\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t<p>사용할 닉네임을 입력해주세요.</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"닉네임\"\n\t\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t/>\n\t\t\t\t\t<br />\n\t\t\t\t\t<div className=\"submitBtn\" onClick={onButtonClick}>\n\t\t\t\t\t\t확인\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</NicknameContext.Consumer>\n\t);\n}\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\n// import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport InGame from \"./views/InGame\";\nimport Waiting from \"./views/Waiting\";\nimport Header from \"./components/Header\";\nimport NicknameModal from \"./components/NicknameModal\";\nimport io from \"socket.io-client\";\n// import { IP_ADDRESS, PORT } from \"./networking/constants\";\n\nconst endPoint = \"http://13.125.236.234:3001/\";\nexport var socket = io.connect(`${endPoint}`);\n\nexport default function App() {\n\tconst [nickname, setNickname] = useState(\"\");\n\tconst [nowPlaying, setNowPlaying] = useState(0);\n\tconst [players, setGamePlayers] = useState([]);\n\n\tuseEffect(() => {\n\t\tsocket.on(\n\t\t\t\"connection\",\n\t\t\t(data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t});\n\n\tuseEffect(() => {\n\t\tsetNickname(nickname);\n\t}, [nickname]);\n\n\treturn (\n\t\t<NicknameContext.Provider value={[nickname, setNickname]}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<NowPlayingContext.Provider\n\t\t\t\t\tvalue={{ setNowPlaying, setGamePlayers }}\n\t\t\t\t>\n\t\t\t\t\t{nowPlaying !== 0 ? (\n\t\t\t\t\t\t<InGame\n\t\t\t\t\t\t\tliar={nowPlaying}\n\t\t\t\t\t\t\tplayers={players}\n\t\t\t\t\t\t\tnickname={nickname}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Waiting nickname={nickname} />\n\t\t\t\t\t)}\n\t\t\t\t</NowPlayingContext.Provider>\n\t\t\t\t{!nickname && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<NicknameModal setNickname={setNickname} />\n\t\t\t\t\t\t<div className=\"modal-background\"></div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</NicknameContext.Provider>\n\t);\n}\n\n// NicknameContext\nexport const NicknameContext = React.createContext();\nexport const NowPlayingContext = React.createContext();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}